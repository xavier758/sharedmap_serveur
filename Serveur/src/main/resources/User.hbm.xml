<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC 
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd"> 

<hibernate-mapping>
   <class name="modele.User" table="user">
      <meta attribute="class-description">
         This class contains the user detail. 
      </meta>
      <id name="id" type="java.lang.Integer" column="id">
         <generator class="native"/>
      </id>
      <property name="pseudo" column="pseudo" type="string"/>
      <property name="telephone" column="telephone" type="string" not-null="true" unique="true"/>
      <property name="email" column="email" type="string"/>
      <property name="deviceToken" column="deviceToken" type="string"/>
      
      <!--  Mapping Set<Demande> demandes -->
      <set name="demandes" lazy="false" inverse="true" cascade="all" >
         <key column="demandeur_id"/>        
         <one-to-many class="modele.Demande"/>
      </set>
      
      <!--  Mapping Set<Invitation> aInvite -->
      <set name="aInvite" lazy="false" inverse="true" cascade="all">
         <key column="inviteur_id"/>
         <one-to-many class="modele.Invitation"/>
      </set>
      
      <!--  Mapping Set<Notification> notifications -->
      <set name="notifications" lazy="false" inverse="true" cascade="all">
         <key column="user_id"/>
         <one-to-many class="modele.Notification"/>
      </set>
      
		<!--  Mapping Set<Group> groups -->
      <set name="groups"  table="participation" lazy="false">
         <key column="user_id"/>
         <many-to-many column="group_id" class="modele.Group"/>
      </set>

     <!--  Mapping Set<Group> proprietaire -->
      <set name="proprietaire" lazy="false" inverse="true" cascade="all">
         <key column="user_id"/>
         <one-to-many class="modele.Group"/>
      </set>      
      
      <one-to-one name="dernierePosition" class="modele.DernierePosition" property-ref="user" lazy="false" cascade="all"/>
			
	  <!--  Mapping Set<Marqueur> marqueurs -->
      <set name="marqueurs" lazy="false" inverse="true" cascade="all">
         <key column="user_id"/>
         <one-to-many class="modele.Marqueur"/>
      </set> 

   </class>
</hibernate-mapping>